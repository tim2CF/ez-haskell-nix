#!/bin/sh

set -e

LC_CTYPE=C
SCRIPT_DIR="$( cd "$(dirname "$0")" ; pwd -P )"
APP_NAME="$1"
APP_NAME_CAP="$(echo "$APP_NAME" | awk '{print toupper($0)}')"
APP_NAME_CAP="${APP_NAME_CAP//-/_}"
APP_REGEX="^[a-z]((-[a-z]+)?[a-z0-9]*)*$"

if [[ $APP_NAME =~ $APP_REGEX ]];
then
  echo "
  Got valid app name '$APP_NAME'..."
else
  echo "
  Got invalid app name '$APP_NAME'
  App name should satisfy regex $APP_REGEX
  Terminate!
  "
  exit 1
fi

echo "  Copying ez-haskell-nix template to the current directory..."

cp -a "$SCRIPT_DIR/../template/." ./

echo "  Applying given app name to template..."

find . -type f -name "*" -print0 | xargs -0 sed -i '' -e "s/TODO_DEFINE_APP_CAP/$APP_NAME_CAP/g"
find . -type f -name "*" -print0 | xargs -0 sed -i '' -e "s/TODO_DEFINE_APP/$APP_NAME/g"

echo "  Success!

  ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
  ↓↓↓ IMPORTANT ↓↓↓
  ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓

  1) Run './nix-shell.sh'

  2) Init new project with 'stack new --bare $APP_NAME scotty-hspec-wai --force'

       Name 'scotty-hspec-wai' is just one of possible Haskell
       project templates: https://github.com/commercialhaskell/stack-templates

  3) Run 'vi stack.yaml' and adjust some settings if needed:

       resolver: lts-14.21
       system-ghc: true

  4) Run 'stack test' and follow stack instructions if something is not working

  5) Run 'vi .' and enjoy comfortable Haskell development :)

  ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑
  ↑↑↑ IMPORTANT ↑↑↑
  ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑
"
